-- Create vocabulary table
create table public.vocabulary (
  id bigint generated by default as identity primary key,
  word text not null,
  language character(2) not null, -- ISO 639-1 code (e.g., 'en', 'de')
  frequency integer not null default 0,
  definition text null,
  translations jsonb null, -- Store translations like {"en": "English def", "de": "German def"}
  created_at timestamptz default now() not null,
  updated_at timestamptz default now() not null,
  
  -- Ensure a word is unique within its language
  constraint vocabulary_word_language_unique unique (word, language)
);

-- Optional: Index for faster lookups
create index idx_vocabulary_word_language on public.vocabulary (word, language);

-- Enable Row Level Security (Important!)
alter table public.vocabulary enable row level security;

-- Policies: Define who can read/write vocabulary.
-- Example: Allow authenticated users to read all vocabulary
create policy "Allow authenticated read access" on public.vocabulary
  for select
  using (auth.role() = 'authenticated');

-- Example: Allow service_role (e.g., admins, server functions) to insert/update/delete
create policy "Allow admin all access" on public.vocabulary
  for all
  using (auth.role() = 'service_role')
  with check (auth.role() = 'service_role');
